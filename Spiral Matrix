public class Solution {
    private List<int> list = new List<int>();
    public IList<int> SpiralOrder(int[][] matrix) {
        int dir =0;
        bool[,] visited = new bool[matrix.Length,matrix[0].Length];
        dfs(matrix,0,0,visited,false);
        return list;
    }

    
    private void dfs(int[][] matrix,int i,int j, bool[,] visited,bool up){
        if(i>=matrix.Length || i<0 || j>=matrix[i].Length || j<0 || visited[i,j]){
            return;
        }
        visited[i,j]=true;
        list.Add(matrix[i][j]);
        if(up){
            dfs(matrix,i-1,j,visited,true);
        }
        
        dfs(matrix,i,j+1,visited,false);
        dfs(matrix,i+1,j,visited,false);
        dfs(matrix,i,j-1,visited,false);
        dfs(matrix,i-1,j,visited,true);
        
        
    }
}
